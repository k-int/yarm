---
grails:
    profile: web
    codegen:
        defaultPackage: yarm_app
    spring:
        transactionManagement:
            proxies: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    groovy:
        template:
            check-template-location: false
# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true
---
grails:
    plugin:
        springsecurity:
            oauth2:
                active: false    #whether the whole plugin is active or not
                registration:
                    askToLinkOrCreateAccountUri: '/oauth2/ask' # The URI that is called to aks the user to either create a new account or link to an existing account
                    roleNames: ['ROLE_USER'] #A list of role names that should be automatically granted to an OAuth User. The roles will be created if they do not exist
                providers:
                    google:  # GOOGLE_API_KEY and GOOGLE_SECRET are set in the environment, see crowdcat_env.sh
                        api_key: '${YARM_GOOGLE_API_KEY}'   #needed
                        api_secret: '${YARM_GOOGLE_SECRET}' #needed
                        successUri: "/oauth2/google/success"    #optional
                        failureUri: "/oauth2/google/failure"    #optional
                        callback: "/oauth2/google/callback"     #optional
                        scopes: "https://www.googleapis.com/auth/userinfo.profile" #optional, see https://developers.google.com/identity/protocols/googlescopes#monitoringv3
---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
endpoints:
    jmx:
        unique-names: true

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: true
        use_query_cache: false
        region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory

#dataSource:
#    pooled: true
#    jmxExport: true
#    driverClassName: org.h2.Driver
#    username: sa
#    password:

environments:
    development:
        dataSource:
            dbCreate: update
            url: jdbc:postgresql://pghost:5432/knowint
            username: yarm
            password: yarm
            driverClassName: org.postgresql.Driver
            dialect: com.k_int.yarm.utils.PgSQLCustomDialect
    test:
        dataSource:
            dbCreate: update
            url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    production:
        dataSource:
            dbCreate: update
            url: jdbc:postgresql://pghost:5432/knowint
            username: yarm
            password: yarm
            driverClassName: org.postgresql.Driver
            dialect: com.k_int.yarm.utils.PgSQLCustomDialect
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED

---
authCfgFile: '/etc/kiauthcfg.yml'
---
grails:
  plugin:
    springsecurity:
      userLookup:
        userDomainClassName: 'implicitauth.User'
        authorityJoinClassName: 'implicitauth.UserRole'
      providerNames:
        - 'preAuthenticatedAuthenticationProvider'
        - 'daoAuthenticationProvider'

      ipRestrictions:
        - 
          pattern: '/internalApi/**'
          access:
            - '127.0.0.1'
      authority:
        className: 'implicitauth.Role'
      controllerAnnotations:
        # N.B. Static Rules need to be the name of the controller, not the mapped URL - so /aoGrant/** and NOT /grant/** or you'll get a 403.
        staticRules:
          -
            pattern: '/home/**'
            access:
              -
                'permitAll'
        chainMap:
          -
            pattern: '/assets/**'
            filters: 'none'
          -
            pattern: '/**/js/**'
            filters: 'none'
          -
            pattern: '/**/css/**'
            filters: 'none'
          -
            pattern: '/**/images/**'
            filters: 'none'
          -
            pattern: '/**/favicon.ico'
            filters: 'none'
          -
            pattern: '/**'
            filters: 'JOINED_FILTERS,-anonymousAuthenticationFilter,-exceptionTranslationFilter,-authenticationProcessingFilter,-securityContextPersistenceFilter, -rememberMeAuthenticationFilter,-basicAuthenticationFilter,-basicExceptionTranslationFilter'

